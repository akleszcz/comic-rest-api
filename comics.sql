DROP DATABASE IF EXISTS comicsdb;
CREATE DATABASE comicsdb;

\c comicsdb;

CREATE TABLE COMICS (
  ID SERIAL PRIMARY KEY,
  TITLE TEXT NOT NULL
);

CREATE TABLE VOLUMES (
  ID SERIAL PRIMARY KEY,
  NUMBER SMALLINT NOT NULL,
  TITLE TEXT,
  COMIC_ID INTEGER REFERENCES COMICS (ID) NOT NULL 
);

CREATE TABLE CHAPTERS (
  ID SERIAL PRIMARY KEY,
  NUMBER SMALLINT NOT NULL,
  TITLE TEXT,
  VOLUME_ID INTEGER REFERENCES VOLUMES (ID) NOT NULL 
);

CREATE TABLE PAGES (
  ID SERIAL PRIMARY KEY,
  CHAPTER_ID INTEGER REFERENCES CHAPTERS (ID) NOT NULL,
  THUMBNAIL_URL VARCHAR(500),
  FULLSIZE_URL VARCHAR(500),
  ORDER_NUMBER DECIMAL
);

CREATE OR REPLACE VIEW V_VOLUMES_CHAPTERS AS 
  SELECT VOLUMES.ID AS VOLUME_ID, VOLUMES.NUMBER AS VOLUME_NUMBER, VOLUMES.TITLE AS VOLUME_TITLE,
  CHAPTERS.ID AS CHAPTER_ID, CHAPTERS.NUMBER AS CHAPTER_NUMBER, CHAPTERS.TITLE AS CHAPTER_TITLE
  FROM VOLUMES 
  JOIN CHAPTERS ON VOLUMES.ID = CHAPTERS.VOLUME_ID;

CREATE OR REPLACE VIEW V_VOLUMES_CHAPTERS_PAGES AS 
  SELECT VOLUMES.ID AS VOLUME_ID, VOLUMES.NUMBER AS VOLUME_NUMBER, VOLUMES.TITLE AS VOLUME_TITLE,
  CHAPTERS.ID AS CHAPTER_ID, CHAPTERS.NUMBER AS CHAPTER_NUMBER, CHAPTERS.TITLE AS CHAPTER_TITLE,
  PAGES.ID AS PAGE_ID, PAGES.ORDER_NUMBER AS PAGE_ORDER_NUMBER, PAGES.THUMBNAIL_URL AS PAGE_THUMBNAIL_URL, PAGES.FULLSIZE_URL AS PAGE_FULLSIZE_URL
  FROM VOLUMES 
  JOIN CHAPTERS ON VOLUMES.ID = CHAPTERS.VOLUME_ID
  JOIN PAGES ON PAGES.CHAPTER_ID = CHAPTERS.ID;
